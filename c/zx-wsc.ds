/* c/zx-wsc.ds - WARNING: This file was auto generated by xsd2sg.pl. DO NOT EDIT!
 * $Id$ */
/* Code generation design Copyright (c) 2006 Sampo Kellomaki (sampo@iki.fi),
 * All Rights Reserved. NO WARRANTY. See file COPYING for terms and conditions
 * of use. Some aspects of code generation were driven by schema
 * descriptions that were used as input and may be subject to their own copyright.
 * Code generation uses a template, whose copyright statement follows. */

/** ds-templ.c  -  DirectoryScript template, used in code generation
 ** Copyright (c) 2007 Symlabs (symlabs@symlabs.com), All Rights Reserved.
 ** Author: Sampo Kellomaki (sampo@iki.fi)
 ** This is confidential unpublished proprietary source code of the author.
 ** NO WARRANTY, not even implied warranties. Contains trade secrets.
 ** Distribution prohibited unless authorized in writing.
 ** Licensed under Apache License 2.0, see file COPYING.
 ** Id: ds-templ.c,v 1.1 2007-08-10 17:44:49 sampo Exp $
 **
 ** 6.6.2007, created, Sampo Kellomaki (sampo@iki.fi)
 **
 ** N.B: This template is meant to be processed by pd/xsd2sg.pl. Beware
 ** of special markers that xsd2sg.pl expects to find and understand.
 **/



function parse_wsc_DerivedKeyToken(data, x) {
  POPATTR(x[1], 'Algorithm', data.Algorithm);
  POPATTR(x[1], 'wsu_Id', data.wsu_Id);

  tag = find_xml_local(x[2], 'SecurityTokenReference', 1);
  h =  hash [];
  parse_wsse_SecurityTokenReference(h, aux1);
  data{'SecurityTokenReference'} = h;
  tag = find_xml_local(x[2], 'Properties', 1);
  h =  hash [];
  parse_wsc_Properties(h, aux1);
  data{'Properties'} = h;
  POPTAG_RAW(x[2],  'Generation', data.Generation);
  POPTAG_RAW(x[2],  'Offset', data.Offset);
  POPTAG_RAW(x[2],  'Length', data.Length);
  POPTAG_RAW(x[2],  'Label', data.Label);
  POPTAG_RAW(x[2],  'Nonce', data.Nonce);

}

function build_wsc_DerivedKeyToken(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'Algorithm', data.Algorithm);
  PUSHATTR(attr, 'wsu_Id', data.wsu_Id);

  push body, build_wsse_SecurityTokenReference(data{'SecurityTokenReference'});
  push body, build_wsc_Properties(data{'Properties'});
  PUSHTAG_RAW(body, 'Generation', data.Generation);
  PUSHTAG_RAW(body, 'Offset', data.Offset);
  PUSHTAG_RAW(body, 'Length', data.Length);
  PUSHTAG_RAW(body, 'Label', data.Label);
  PUSHTAG_RAW(body, 'Nonce', data.Nonce);

  return TAG('wsc:DerivedKeyToken', attr, body);
}




function parse_wsc_Properties(data, x) {


}

function build_wsc_Properties(data) {
  attr = [];
  body = [];


  return TAG('wsc:Properties', attr, body);
}




function parse_wsc_SecurityContextToken(data, x) {
  POPATTR(x[1], 'wsu_Id', data.wsu_Id);


}

function build_wsc_SecurityContextToken(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'wsu_Id', data.wsu_Id);


  return TAG('wsc:SecurityContextToken', attr, body);
}


/* EOF -- c/zx-wsc.ds */
