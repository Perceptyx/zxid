/* c/zx-b12.ds - WARNING: This file was auto generated by xsd2sg.pl. DO NOT EDIT!
 * $Id$ */
/* Code generation design Copyright (c) 2006 Sampo Kellomaki (sampo@iki.fi),
 * All Rights Reserved. NO WARRANTY. See file COPYING for terms and conditions
 * of use. Some aspects of code generation were driven by schema
 * descriptions that were used as input and may be subject to their own copyright.
 * Code generation uses a template, whose copyright statement follows. */

/** ds-templ.c  -  DirectoryScript template, used in code generation
 ** Copyright (c) 2007 Symlabs (symlabs@symlabs.com), All Rights Reserved.
 ** Author: Sampo Kellomaki (sampo@iki.fi)
 ** This is confidential unpublished proprietary source code of the author.
 ** NO WARRANTY, not even implied warranties. Contains trade secrets.
 ** Distribution prohibited unless authorized in writing.
 ** Licensed under Apache License 2.0, see file COPYING.
 ** Id: ds-templ.c,v 1.1 2007-08-10 17:44:49 sampo Exp $
 **
 ** 6.6.2007, created, Sampo Kellomaki (sampo@iki.fi)
 **
 ** N.B: This template is meant to be processed by pd/xsd2sg.pl. Beware
 ** of special markers that xsd2sg.pl expects to find and understand.
 **/



function parse_b12_Consent(data, x) {
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'timestamp', data.timestamp);
  POPATTR(x[1], 'uri', data.uri);
  POPATTR(x[1], 'e_actor', data.e_actor);
  POPATTR(x[1], 'e_mustUnderstand', data.e_mustUnderstand);


}

function build_b12_Consent(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'timestamp', data.timestamp);
  PUSHATTR(attr, 'uri', data.uri);
  PUSHATTR(attr, 'e_actor', data.e_actor);
  PUSHATTR(attr, 'e_mustUnderstand', data.e_mustUnderstand);


  return TAG('b12:Consent', attr, body);
}




function parse_b12_Correlation(data, x) {
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'messageID', data.messageID);
  POPATTR(x[1], 'refToMessageID', data.refToMessageID);
  POPATTR(x[1], 'timestamp', data.timestamp);
  POPATTR(x[1], 'e_actor', data.e_actor);
  POPATTR(x[1], 'e_mustUnderstand', data.e_mustUnderstand);


}

function build_b12_Correlation(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'messageID', data.messageID);
  PUSHATTR(attr, 'refToMessageID', data.refToMessageID);
  PUSHATTR(attr, 'timestamp', data.timestamp);
  PUSHATTR(attr, 'e_actor', data.e_actor);
  PUSHATTR(attr, 'e_mustUnderstand', data.e_mustUnderstand);


  return TAG('b12:Correlation', attr, body);
}




function parse_b12_ProcessingContext(data, x) {
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'e_actor', data.e_actor);
  POPATTR(x[1], 'e_mustUnderstand', data.e_mustUnderstand);


}

function build_b12_ProcessingContext(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'e_actor', data.e_actor);
  PUSHATTR(attr, 'e_mustUnderstand', data.e_mustUnderstand);


  return TAG('b12:ProcessingContext', attr, body);
}




function parse_b12_Provider(data, x) {
  POPATTR(x[1], 'affiliationID', data.affiliationID);
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'providerID', data.providerID);
  POPATTR(x[1], 'e_actor', data.e_actor);
  POPATTR(x[1], 'e_mustUnderstand', data.e_mustUnderstand);


}

function build_b12_Provider(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'affiliationID', data.affiliationID);
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'providerID', data.providerID);
  PUSHATTR(attr, 'e_actor', data.e_actor);
  PUSHATTR(attr, 'e_mustUnderstand', data.e_mustUnderstand);


  return TAG('b12:Provider', attr, body);
}




function parse_b12_UsageDirective(data, x) {
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'ref', data.ref);
  POPATTR(x[1], 'e_actor', data.e_actor);
  POPATTR(x[1], 'e_mustUnderstand', data.e_mustUnderstand);


}

function build_b12_UsageDirective(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'ref', data.ref);
  PUSHATTR(attr, 'e_actor', data.e_actor);
  PUSHATTR(attr, 'e_mustUnderstand', data.e_mustUnderstand);


  return TAG('b12:UsageDirective', attr, body);
}


/* EOF -- c/zx-b12.ds */
