/* c/zx-e.ds - WARNING: This file was auto generated by xsd2sg.pl. DO NOT EDIT!
 * $Id$ */
/* Code generation design Copyright (c) 2006 Sampo Kellomaki (sampo@iki.fi),
 * All Rights Reserved. NO WARRANTY. See file COPYING for terms and conditions
 * of use. Some aspects of code generation were driven by schema
 * descriptions that were used as input and may be subject to their own copyright.
 * Code generation uses a template, whose copyright statement follows. */

/** ds-templ.c  -  DirectoryScript template, used in code generation
 ** Copyright (c) 2007 Symlabs (symlabs@symlabs.com), All Rights Reserved.
 ** Author: Sampo Kellomaki (sampo@iki.fi)
 ** This is confidential unpublished proprietary source code of the author.
 ** NO WARRANTY, not even implied warranties. Contains trade secrets.
 ** Distribution prohibited unless authorized in writing.
 ** Licensed under Apache License 2.0, see file COPYING.
 ** Id: ds-templ.c,v 1.1 2007-08-10 17:44:49 sampo Exp $
 **
 ** 6.6.2007, created, Sampo Kellomaki (sampo@iki.fi)
 **
 ** N.B: This template is meant to be processed by pd/xsd2sg.pl. Beware
 ** of special markers that xsd2sg.pl expects to find and understand.
 **/



function parse_e_Body(data, x) {
  POPATTR(x[1], 'id', data.id);

  tag = find_xml_local(x[2], 'ArtifactResolve', 1);
  h =  hash [];
  parse_sp_ArtifactResolve(h, aux1);
  data{'ArtifactResolve'} = h;
  tag = find_xml_local(x[2], 'ArtifactResponse', 1);
  h =  hash [];
  parse_sp_ArtifactResponse(h, aux1);
  data{'ArtifactResponse'} = h;
  tag = find_xml_local(x[2], 'ManageNameIDRequest', 1);
  h =  hash [];
  parse_sp_ManageNameIDRequest(h, aux1);
  data{'ManageNameIDRequest'} = h;
  tag = find_xml_local(x[2], 'ManageNameIDResponse', 1);
  h =  hash [];
  parse_sp_ManageNameIDResponse(h, aux1);
  data{'ManageNameIDResponse'} = h;
  tag = find_xml_local(x[2], 'LogoutRequest', 1);
  h =  hash [];
  parse_sp_LogoutRequest(h, aux1);
  data{'LogoutRequest'} = h;
  tag = find_xml_local(x[2], 'LogoutResponse', 1);
  h =  hash [];
  parse_sp_LogoutResponse(h, aux1);
  data{'LogoutResponse'} = h;
  tag = find_xml_local(x[2], 'NameIDMappingRequest', 1);
  h =  hash [];
  parse_sp_NameIDMappingRequest(h, aux1);
  data{'NameIDMappingRequest'} = h;
  tag = find_xml_local(x[2], 'NameIDMappingResponse', 1);
  h =  hash [];
  parse_sp_NameIDMappingResponse(h, aux1);
  data{'NameIDMappingResponse'} = h;
  tag = find_xml_local(x[2], 'AttributeQuery', 1);
  h =  hash [];
  parse_sp_AttributeQuery(h, aux1);
  data{'AttributeQuery'} = h;
  tag = find_xml_local(x[2], 'AuthnQuery', 1);
  h =  hash [];
  parse_sp_AuthnQuery(h, aux1);
  data{'AuthnQuery'} = h;
  tag = find_xml_local(x[2], 'AuthzDecisionQuery', 1);
  h =  hash [];
  parse_sp_AuthzDecisionQuery(h, aux1);
  data{'AuthzDecisionQuery'} = h;
  tag = find_xml_local(x[2], 'AssertionIDRequest', 1);
  h =  hash [];
  parse_sp_AssertionIDRequest(h, aux1);
  data{'AssertionIDRequest'} = h;
  tag = find_xml_local(x[2], 'Response', 1);
  h =  hash [];
  parse_sp_Response(h, aux1);
  data{'Response'} = h;
  tag = find_xml_local(x[2], 'AuthnRequest', 1);
  h =  hash [];
  parse_sp_AuthnRequest(h, aux1);
  data{'AuthnRequest'} = h;
  tag = find_xml_local(x[2], 'Request', 1);
  h =  hash [];
  parse_sp11_Request(h, aux1);
  data{'Request'} = h;
  tag = find_xml_local(x[2], 'sp11_Response', 1);
  h =  hash [];
  parse_sp11_Response(h, aux1);
  data{'sp11_Response'} = h;
  tag = find_xml_local(x[2], 'RegisterNameIdentifierRequest', 1);
  h =  hash [];
  parse_ff12_RegisterNameIdentifierRequest(h, aux1);
  data{'RegisterNameIdentifierRequest'} = h;
  tag = find_xml_local(x[2], 'RegisterNameIdentifierResponse', 1);
  h =  hash [];
  parse_ff12_RegisterNameIdentifierResponse(h, aux1);
  data{'RegisterNameIdentifierResponse'} = h;
  tag = find_xml_local(x[2], 'FederationTerminationNotification', 1);
  h =  hash [];
  parse_ff12_FederationTerminationNotification(h, aux1);
  data{'FederationTerminationNotification'} = h;
  tag = find_xml_local(x[2], 'ff12_LogoutRequest', 1);
  h =  hash [];
  parse_ff12_LogoutRequest(h, aux1);
  data{'ff12_LogoutRequest'} = h;
  tag = find_xml_local(x[2], 'ff12_LogoutResponse', 1);
  h =  hash [];
  parse_ff12_LogoutResponse(h, aux1);
  data{'ff12_LogoutResponse'} = h;
  tag = find_xml_local(x[2], 'NameIdentifierMappingRequest', 1);
  h =  hash [];
  parse_ff12_NameIdentifierMappingRequest(h, aux1);
  data{'NameIdentifierMappingRequest'} = h;
  tag = find_xml_local(x[2], 'NameIdentifierMappingResponse', 1);
  h =  hash [];
  parse_ff12_NameIdentifierMappingResponse(h, aux1);
  data{'NameIdentifierMappingResponse'} = h;
  tag = find_xml_local(x[2], 'XACMLAuthzDecisionQuery', 1);
  h =  hash [];
  parse_xasp_XACMLAuthzDecisionQuery(h, aux1);
  data{'XACMLAuthzDecisionQuery'} = h;
  tag = find_xml_local(x[2], 'XACMLPolicyQuery', 1);
  h =  hash [];
  parse_xasp_XACMLPolicyQuery(h, aux1);
  data{'XACMLPolicyQuery'} = h;
  tag = find_xml_local(x[2], 'xaspcd1_XACMLAuthzDecisionQuery', 1);
  h =  hash [];
  parse_xaspcd1_XACMLAuthzDecisionQuery(h, aux1);
  data{'xaspcd1_XACMLAuthzDecisionQuery'} = h;
  tag = find_xml_local(x[2], 'xaspcd1_XACMLPolicyQuery', 1);
  h =  hash [];
  parse_xaspcd1_XACMLPolicyQuery(h, aux1);
  data{'xaspcd1_XACMLPolicyQuery'} = h;
  tag = find_xml_local(x[2], 'xac_Request', 1);
  h =  hash [];
  parse_xac_Request(h, aux1);
  data{'xac_Request'} = h;
  tag = find_xml_local(x[2], 'xac_Response', 1);
  h =  hash [];
  parse_xac_Response(h, aux1);
  data{'xac_Response'} = h;
  tag = find_xml_local(x[2], 'Query', 1);
  h =  hash [];
  parse_di_Query(h, aux1);
  data{'Query'} = h;
  tag = find_xml_local(x[2], 'QueryResponse', 1);
  h =  hash [];
  parse_di_QueryResponse(h, aux1);
  data{'QueryResponse'} = h;
  tag = find_xml_local(x[2], 'di12_Query', 1);
  h =  hash [];
  parse_di12_Query(h, aux1);
  data{'di12_Query'} = h;
  tag = find_xml_local(x[2], 'di12_QueryResponse', 1);
  h =  hash [];
  parse_di12_QueryResponse(h, aux1);
  data{'di12_QueryResponse'} = h;
  tag = find_xml_local(x[2], 'Modify', 1);
  h =  hash [];
  parse_di12_Modify(h, aux1);
  data{'Modify'} = h;
  tag = find_xml_local(x[2], 'ModifyResponse', 1);
  h =  hash [];
  parse_di12_ModifyResponse(h, aux1);
  data{'ModifyResponse'} = h;
  tag = find_xml_local(x[2], 'Fault', 1);
  h =  hash [];
  parse_e_Fault(h, aux1);
  data{'Fault'} = h;
  tag = find_xml_local(x[2], 'SvcMDAssociationAdd', 1);
  h =  hash [];
  parse_di_SvcMDAssociationAdd(h, aux1);
  data{'SvcMDAssociationAdd'} = h;
  tag = find_xml_local(x[2], 'SvcMDAssociationAddResponse', 1);
  h =  hash [];
  parse_di_SvcMDAssociationAddResponse(h, aux1);
  data{'SvcMDAssociationAddResponse'} = h;
  tag = find_xml_local(x[2], 'SvcMDAssociationDelete', 1);
  h =  hash [];
  parse_di_SvcMDAssociationDelete(h, aux1);
  data{'SvcMDAssociationDelete'} = h;
  tag = find_xml_local(x[2], 'SvcMDAssociationDeleteResponse', 1);
  h =  hash [];
  parse_di_SvcMDAssociationDeleteResponse(h, aux1);
  data{'SvcMDAssociationDeleteResponse'} = h;
  tag = find_xml_local(x[2], 'SvcMDAssociationQuery', 1);
  h =  hash [];
  parse_di_SvcMDAssociationQuery(h, aux1);
  data{'SvcMDAssociationQuery'} = h;
  tag = find_xml_local(x[2], 'SvcMDAssociationQueryResponse', 1);
  h =  hash [];
  parse_di_SvcMDAssociationQueryResponse(h, aux1);
  data{'SvcMDAssociationQueryResponse'} = h;
  tag = find_xml_local(x[2], 'SvcMDRegister', 1);
  h =  hash [];
  parse_di_SvcMDRegister(h, aux1);
  data{'SvcMDRegister'} = h;
  tag = find_xml_local(x[2], 'SvcMDRegisterResponse', 1);
  h =  hash [];
  parse_di_SvcMDRegisterResponse(h, aux1);
  data{'SvcMDRegisterResponse'} = h;
  tag = find_xml_local(x[2], 'SvcMDDelete', 1);
  h =  hash [];
  parse_di_SvcMDDelete(h, aux1);
  data{'SvcMDDelete'} = h;
  tag = find_xml_local(x[2], 'SvcMDDeleteResponse', 1);
  h =  hash [];
  parse_di_SvcMDDeleteResponse(h, aux1);
  data{'SvcMDDeleteResponse'} = h;
  tag = find_xml_local(x[2], 'SvcMDQuery', 1);
  h =  hash [];
  parse_di_SvcMDQuery(h, aux1);
  data{'SvcMDQuery'} = h;
  tag = find_xml_local(x[2], 'SvcMDQueryResponse', 1);
  h =  hash [];
  parse_di_SvcMDQueryResponse(h, aux1);
  data{'SvcMDQueryResponse'} = h;
  tag = find_xml_local(x[2], 'SvcMDReplace', 1);
  h =  hash [];
  parse_di_SvcMDReplace(h, aux1);
  data{'SvcMDReplace'} = h;
  tag = find_xml_local(x[2], 'SvcMDReplaceResponse', 1);
  h =  hash [];
  parse_di_SvcMDReplaceResponse(h, aux1);
  data{'SvcMDReplaceResponse'} = h;
  tag = find_xml_local(x[2], 'Create', 1);
  h =  hash [];
  parse_dap_Create(h, aux1);
  data{'Create'} = h;
  tag = find_xml_local(x[2], 'CreateResponse', 1);
  h =  hash [];
  parse_dap_CreateResponse(h, aux1);
  data{'CreateResponse'} = h;
  tag = find_xml_local(x[2], 'dap_Query', 1);
  h =  hash [];
  parse_dap_Query(h, aux1);
  data{'dap_Query'} = h;
  tag = find_xml_local(x[2], 'dap_QueryResponse', 1);
  h =  hash [];
  parse_dap_QueryResponse(h, aux1);
  data{'dap_QueryResponse'} = h;
  tag = find_xml_local(x[2], 'dap_Modify', 1);
  h =  hash [];
  parse_dap_Modify(h, aux1);
  data{'dap_Modify'} = h;
  tag = find_xml_local(x[2], 'dap_ModifyResponse', 1);
  h =  hash [];
  parse_dap_ModifyResponse(h, aux1);
  data{'dap_ModifyResponse'} = h;
  tag = find_xml_local(x[2], 'Delete', 1);
  h =  hash [];
  parse_dap_Delete(h, aux1);
  data{'Delete'} = h;
  tag = find_xml_local(x[2], 'DeleteResponse', 1);
  h =  hash [];
  parse_dap_DeleteResponse(h, aux1);
  data{'DeleteResponse'} = h;
  tag = find_xml_local(x[2], 'Notify', 1);
  h =  hash [];
  parse_dap_Notify(h, aux1);
  data{'Notify'} = h;
  tag = find_xml_local(x[2], 'NotifyResponse', 1);
  h =  hash [];
  parse_dap_NotifyResponse(h, aux1);
  data{'NotifyResponse'} = h;
  tag = find_xml_local(x[2], 'AddEntityRequest', 1);
  h =  hash [];
  parse_ps_AddEntityRequest(h, aux1);
  data{'AddEntityRequest'} = h;
  tag = find_xml_local(x[2], 'AddEntityResponse', 1);
  h =  hash [];
  parse_ps_AddEntityResponse(h, aux1);
  data{'AddEntityResponse'} = h;
  tag = find_xml_local(x[2], 'AddKnownEntityRequest', 1);
  h =  hash [];
  parse_ps_AddKnownEntityRequest(h, aux1);
  data{'AddKnownEntityRequest'} = h;
  tag = find_xml_local(x[2], 'AddKnownEntityResponse', 1);
  h =  hash [];
  parse_ps_AddKnownEntityResponse(h, aux1);
  data{'AddKnownEntityResponse'} = h;
  tag = find_xml_local(x[2], 'AddCollectionRequest', 1);
  h =  hash [];
  parse_ps_AddCollectionRequest(h, aux1);
  data{'AddCollectionRequest'} = h;
  tag = find_xml_local(x[2], 'AddCollectionResponse', 1);
  h =  hash [];
  parse_ps_AddCollectionResponse(h, aux1);
  data{'AddCollectionResponse'} = h;
  tag = find_xml_local(x[2], 'AddToCollectionRequest', 1);
  h =  hash [];
  parse_ps_AddToCollectionRequest(h, aux1);
  data{'AddToCollectionRequest'} = h;
  tag = find_xml_local(x[2], 'AddToCollectionResponse', 1);
  h =  hash [];
  parse_ps_AddToCollectionResponse(h, aux1);
  data{'AddToCollectionResponse'} = h;
  tag = find_xml_local(x[2], 'RemoveEntityRequest', 1);
  h =  hash [];
  parse_ps_RemoveEntityRequest(h, aux1);
  data{'RemoveEntityRequest'} = h;
  tag = find_xml_local(x[2], 'RemoveEntityResponse', 1);
  h =  hash [];
  parse_ps_RemoveEntityResponse(h, aux1);
  data{'RemoveEntityResponse'} = h;
  tag = find_xml_local(x[2], 'RemoveCollectionRequest', 1);
  h =  hash [];
  parse_ps_RemoveCollectionRequest(h, aux1);
  data{'RemoveCollectionRequest'} = h;
  tag = find_xml_local(x[2], 'RemoveCollectionResponse', 1);
  h =  hash [];
  parse_ps_RemoveCollectionResponse(h, aux1);
  data{'RemoveCollectionResponse'} = h;
  tag = find_xml_local(x[2], 'RemoveFromCollectionRequest', 1);
  h =  hash [];
  parse_ps_RemoveFromCollectionRequest(h, aux1);
  data{'RemoveFromCollectionRequest'} = h;
  tag = find_xml_local(x[2], 'RemoveFromCollectionResponse', 1);
  h =  hash [];
  parse_ps_RemoveFromCollectionResponse(h, aux1);
  data{'RemoveFromCollectionResponse'} = h;
  tag = find_xml_local(x[2], 'ListMembersRequest', 1);
  h =  hash [];
  parse_ps_ListMembersRequest(h, aux1);
  data{'ListMembersRequest'} = h;
  tag = find_xml_local(x[2], 'ListMembersResponse', 1);
  h =  hash [];
  parse_ps_ListMembersResponse(h, aux1);
  data{'ListMembersResponse'} = h;
  tag = find_xml_local(x[2], 'QueryObjectsRequest', 1);
  h =  hash [];
  parse_ps_QueryObjectsRequest(h, aux1);
  data{'QueryObjectsRequest'} = h;
  tag = find_xml_local(x[2], 'QueryObjectsResponse', 1);
  h =  hash [];
  parse_ps_QueryObjectsResponse(h, aux1);
  data{'QueryObjectsResponse'} = h;
  tag = find_xml_local(x[2], 'GetObjectInfoRequest', 1);
  h =  hash [];
  parse_ps_GetObjectInfoRequest(h, aux1);
  data{'GetObjectInfoRequest'} = h;
  tag = find_xml_local(x[2], 'GetObjectInfoResponse', 1);
  h =  hash [];
  parse_ps_GetObjectInfoResponse(h, aux1);
  data{'GetObjectInfoResponse'} = h;
  tag = find_xml_local(x[2], 'SetObjectInfoRequest', 1);
  h =  hash [];
  parse_ps_SetObjectInfoRequest(h, aux1);
  data{'SetObjectInfoRequest'} = h;
  tag = find_xml_local(x[2], 'SetObjectInfoResponse', 1);
  h =  hash [];
  parse_ps_SetObjectInfoResponse(h, aux1);
  data{'SetObjectInfoResponse'} = h;
  tag = find_xml_local(x[2], 'TestMembershipRequest', 1);
  h =  hash [];
  parse_ps_TestMembershipRequest(h, aux1);
  data{'TestMembershipRequest'} = h;
  tag = find_xml_local(x[2], 'TestMembershipResponse', 1);
  h =  hash [];
  parse_ps_TestMembershipResponse(h, aux1);
  data{'TestMembershipResponse'} = h;
  tag = find_xml_local(x[2], 'ResolveIdentifierRequest', 1);
  h =  hash [];
  parse_ps_ResolveIdentifierRequest(h, aux1);
  data{'ResolveIdentifierRequest'} = h;
  tag = find_xml_local(x[2], 'ResolveIdentifierResponse', 1);
  h =  hash [];
  parse_ps_ResolveIdentifierResponse(h, aux1);
  data{'ResolveIdentifierResponse'} = h;
  tag = find_xml_local(x[2], 'ps_Notify', 1);
  h =  hash [];
  parse_ps_Notify(h, aux1);
  data{'ps_Notify'} = h;
  tag = find_xml_local(x[2], 'ps_NotifyResponse', 1);
  h =  hash [];
  parse_ps_NotifyResponse(h, aux1);
  data{'ps_NotifyResponse'} = h;
  tag = find_xml_local(x[2], 'IdentityMappingRequest', 1);
  h =  hash [];
  parse_im_IdentityMappingRequest(h, aux1);
  data{'IdentityMappingRequest'} = h;
  tag = find_xml_local(x[2], 'IdentityMappingResponse', 1);
  h =  hash [];
  parse_im_IdentityMappingResponse(h, aux1);
  data{'IdentityMappingResponse'} = h;
  tag = find_xml_local(x[2], 'SASLRequest', 1);
  h =  hash [];
  parse_as_SASLRequest(h, aux1);
  data{'SASLRequest'} = h;
  tag = find_xml_local(x[2], 'SASLResponse', 1);
  h =  hash [];
  parse_as_SASLResponse(h, aux1);
  data{'SASLResponse'} = h;
  tag = find_xml_local(x[2], 'SubmitReq', 1);
  h =  hash [];
  parse_mm7_SubmitReq(h, aux1);
  data{'SubmitReq'} = h;
  tag = find_xml_local(x[2], 'SubmitRsp', 1);
  h =  hash [];
  parse_mm7_SubmitRsp(h, aux1);
  data{'SubmitRsp'} = h;
  tag = find_xml_local(x[2], 'DeliverReq', 1);
  h =  hash [];
  parse_mm7_DeliverReq(h, aux1);
  data{'DeliverReq'} = h;
  tag = find_xml_local(x[2], 'DeliverRsp', 1);
  h =  hash [];
  parse_mm7_DeliverRsp(h, aux1);
  data{'DeliverRsp'} = h;
  tag = find_xml_local(x[2], 'CancelReq', 1);
  h =  hash [];
  parse_mm7_CancelReq(h, aux1);
  data{'CancelReq'} = h;
  tag = find_xml_local(x[2], 'CancelRsp', 1);
  h =  hash [];
  parse_mm7_CancelRsp(h, aux1);
  data{'CancelRsp'} = h;
  tag = find_xml_local(x[2], 'ReplaceReq', 1);
  h =  hash [];
  parse_mm7_ReplaceReq(h, aux1);
  data{'ReplaceReq'} = h;
  tag = find_xml_local(x[2], 'ReplaceRsp', 1);
  h =  hash [];
  parse_mm7_ReplaceRsp(h, aux1);
  data{'ReplaceRsp'} = h;
  tag = find_xml_local(x[2], 'extendedCancelReq', 1);
  h =  hash [];
  parse_mm7_extendedCancelReq(h, aux1);
  data{'extendedCancelReq'} = h;
  tag = find_xml_local(x[2], 'extendedCancelRsp', 1);
  h =  hash [];
  parse_mm7_extendedCancelRsp(h, aux1);
  data{'extendedCancelRsp'} = h;
  tag = find_xml_local(x[2], 'extendedReplaceReq', 1);
  h =  hash [];
  parse_mm7_extendedReplaceReq(h, aux1);
  data{'extendedReplaceReq'} = h;
  tag = find_xml_local(x[2], 'extendedReplaceRsp', 1);
  h =  hash [];
  parse_mm7_extendedReplaceRsp(h, aux1);
  data{'extendedReplaceRsp'} = h;
  tag = find_xml_local(x[2], 'DeliveryReportReq', 1);
  h =  hash [];
  parse_mm7_DeliveryReportReq(h, aux1);
  data{'DeliveryReportReq'} = h;
  tag = find_xml_local(x[2], 'DeliveryReportRsp', 1);
  h =  hash [];
  parse_mm7_DeliveryReportRsp(h, aux1);
  data{'DeliveryReportRsp'} = h;
  tag = find_xml_local(x[2], 'ReadReplyReq', 1);
  h =  hash [];
  parse_mm7_ReadReplyReq(h, aux1);
  data{'ReadReplyReq'} = h;
  tag = find_xml_local(x[2], 'ReadReplyRsp', 1);
  h =  hash [];
  parse_mm7_ReadReplyRsp(h, aux1);
  data{'ReadReplyRsp'} = h;
  tag = find_xml_local(x[2], 'RSErrorRsp', 1);
  h =  hash [];
  parse_mm7_RSErrorRsp(h, aux1);
  data{'RSErrorRsp'} = h;
  tag = find_xml_local(x[2], 'VASPErrorRsp', 1);
  h =  hash [];
  parse_mm7_VASPErrorRsp(h, aux1);
  data{'VASPErrorRsp'} = h;
  tag = find_xml_local(x[2], 'QueryStatusReq', 1);
  h =  hash [];
  parse_mm7_QueryStatusReq(h, aux1);
  data{'QueryStatusReq'} = h;
  tag = find_xml_local(x[2], 'QueryStatusRsp', 1);
  h =  hash [];
  parse_mm7_QueryStatusRsp(h, aux1);
  data{'QueryStatusRsp'} = h;
  tag = find_xml_local(x[2], 'cb_Query', 1);
  h =  hash [];
  parse_cb_Query(h, aux1);
  data{'cb_Query'} = h;
  tag = find_xml_local(x[2], 'cb_QueryResponse', 1);
  h =  hash [];
  parse_cb_QueryResponse(h, aux1);
  data{'cb_QueryResponse'} = h;
  tag = find_xml_local(x[2], 'cb_Create', 1);
  h =  hash [];
  parse_cb_Create(h, aux1);
  data{'cb_Create'} = h;
  tag = find_xml_local(x[2], 'cb_CreateResponse', 1);
  h =  hash [];
  parse_cb_CreateResponse(h, aux1);
  data{'cb_CreateResponse'} = h;
  tag = find_xml_local(x[2], 'cb_Delete', 1);
  h =  hash [];
  parse_cb_Delete(h, aux1);
  data{'cb_Delete'} = h;
  tag = find_xml_local(x[2], 'cb_DeleteResponse', 1);
  h =  hash [];
  parse_cb_DeleteResponse(h, aux1);
  data{'cb_DeleteResponse'} = h;
  tag = find_xml_local(x[2], 'cb_Modify', 1);
  h =  hash [];
  parse_cb_Modify(h, aux1);
  data{'cb_Modify'} = h;
  tag = find_xml_local(x[2], 'cb_ModifyResponse', 1);
  h =  hash [];
  parse_cb_ModifyResponse(h, aux1);
  data{'cb_ModifyResponse'} = h;
  tag = find_xml_local(x[2], 'cb_Notify', 1);
  h =  hash [];
  parse_cb_Notify(h, aux1);
  data{'cb_Notify'} = h;
  tag = find_xml_local(x[2], 'cb_NotifyResponse', 1);
  h =  hash [];
  parse_cb_NotifyResponse(h, aux1);
  data{'cb_NotifyResponse'} = h;
  tag = find_xml_local(x[2], 'ReportUsage', 1);
  h =  hash [];
  parse_cb_ReportUsage(h, aux1);
  data{'ReportUsage'} = h;
  tag = find_xml_local(x[2], 'ReportUsageResponse', 1);
  h =  hash [];
  parse_cb_ReportUsageResponse(h, aux1);
  data{'ReportUsageResponse'} = h;
  tag = find_xml_local(x[2], 'gl_Query', 1);
  h =  hash [];
  parse_gl_Query(h, aux1);
  data{'gl_Query'} = h;
  tag = find_xml_local(x[2], 'gl_QueryResponse', 1);
  h =  hash [];
  parse_gl_QueryResponse(h, aux1);
  data{'gl_QueryResponse'} = h;
  tag = find_xml_local(x[2], 'gl_Create', 1);
  h =  hash [];
  parse_gl_Create(h, aux1);
  data{'gl_Create'} = h;
  tag = find_xml_local(x[2], 'gl_CreateResponse', 1);
  h =  hash [];
  parse_gl_CreateResponse(h, aux1);
  data{'gl_CreateResponse'} = h;
  tag = find_xml_local(x[2], 'gl_Delete', 1);
  h =  hash [];
  parse_gl_Delete(h, aux1);
  data{'gl_Delete'} = h;
  tag = find_xml_local(x[2], 'gl_DeleteResponse', 1);
  h =  hash [];
  parse_gl_DeleteResponse(h, aux1);
  data{'gl_DeleteResponse'} = h;
  tag = find_xml_local(x[2], 'gl_Modify', 1);
  h =  hash [];
  parse_gl_Modify(h, aux1);
  data{'gl_Modify'} = h;
  tag = find_xml_local(x[2], 'gl_ModifyResponse', 1);
  h =  hash [];
  parse_gl_ModifyResponse(h, aux1);
  data{'gl_ModifyResponse'} = h;
  tag = find_xml_local(x[2], 'gl_Notify', 1);
  h =  hash [];
  parse_gl_Notify(h, aux1);
  data{'gl_Notify'} = h;
  tag = find_xml_local(x[2], 'gl_NotifyResponse', 1);
  h =  hash [];
  parse_gl_NotifyResponse(h, aux1);
  data{'gl_NotifyResponse'} = h;
  tag = find_xml_local(x[2], 'StoreObjectRequest', 1);
  h =  hash [];
  parse_demomed_StoreObjectRequest(h, aux1);
  data{'StoreObjectRequest'} = h;
  tag = find_xml_local(x[2], 'StoreObjectResponse', 1);
  h =  hash [];
  parse_demomed_StoreObjectResponse(h, aux1);
  data{'StoreObjectResponse'} = h;
  tag = find_xml_local(x[2], 'GetObjectListRequest', 1);
  h =  hash [];
  parse_demomed_GetObjectListRequest(h, aux1);
  data{'GetObjectListRequest'} = h;
  tag = find_xml_local(x[2], 'GetObjectListResponse', 1);
  h =  hash [];
  parse_demomed_GetObjectListResponse(h, aux1);
  data{'GetObjectListResponse'} = h;
  tag = find_xml_local(x[2], 'GetObjectRequest', 1);
  h =  hash [];
  parse_demomed_GetObjectRequest(h, aux1);
  data{'GetObjectRequest'} = h;
  tag = find_xml_local(x[2], 'GetObjectResponse', 1);
  h =  hash [];
  parse_demomed_GetObjectResponse(h, aux1);
  data{'GetObjectResponse'} = h;
  tag = find_xml_local(x[2], 'DeleteObjectRequest', 1);
  h =  hash [];
  parse_demomed_DeleteObjectRequest(h, aux1);
  data{'DeleteObjectRequest'} = h;
  tag = find_xml_local(x[2], 'DeleteObjectResponse', 1);
  h =  hash [];
  parse_demomed_DeleteObjectResponse(h, aux1);
  data{'DeleteObjectResponse'} = h;
  tag = find_xml_local(x[2], 'Provision', 1);
  h =  hash [];
  parse_pmm_Provision(h, aux1);
  data{'Provision'} = h;
  tag = find_xml_local(x[2], 'ProvisionResponse', 1);
  h =  hash [];
  parse_pmm_ProvisionResponse(h, aux1);
  data{'ProvisionResponse'} = h;
  tag = find_xml_local(x[2], 'PMActivate', 1);
  h =  hash [];
  parse_pmm_PMActivate(h, aux1);
  data{'PMActivate'} = h;
  tag = find_xml_local(x[2], 'PMActivateResponse', 1);
  h =  hash [];
  parse_pmm_PMActivateResponse(h, aux1);
  data{'PMActivateResponse'} = h;
  tag = find_xml_local(x[2], 'PMDeactivate', 1);
  h =  hash [];
  parse_pmm_PMDeactivate(h, aux1);
  data{'PMDeactivate'} = h;
  tag = find_xml_local(x[2], 'PMDeactivateResponse', 1);
  h =  hash [];
  parse_pmm_PMDeactivateResponse(h, aux1);
  data{'PMDeactivateResponse'} = h;
  tag = find_xml_local(x[2], 'PMDelete', 1);
  h =  hash [];
  parse_pmm_PMDelete(h, aux1);
  data{'PMDelete'} = h;
  tag = find_xml_local(x[2], 'PMDeleteResponse', 1);
  h =  hash [];
  parse_pmm_PMDeleteResponse(h, aux1);
  data{'PMDeleteResponse'} = h;
  tag = find_xml_local(x[2], 'PMUpdate', 1);
  h =  hash [];
  parse_pmm_PMUpdate(h, aux1);
  data{'PMUpdate'} = h;
  tag = find_xml_local(x[2], 'PMUpdateResponse', 1);
  h =  hash [];
  parse_pmm_PMUpdateResponse(h, aux1);
  data{'PMUpdateResponse'} = h;
  tag = find_xml_local(x[2], 'PMGetStatus', 1);
  h =  hash [];
  parse_pmm_PMGetStatus(h, aux1);
  data{'PMGetStatus'} = h;
  tag = find_xml_local(x[2], 'PMGetStatusResponse', 1);
  h =  hash [];
  parse_pmm_PMGetStatusResponse(h, aux1);
  data{'PMGetStatusResponse'} = h;
  tag = find_xml_local(x[2], 'PMSetStatus', 1);
  h =  hash [];
  parse_pmm_PMSetStatus(h, aux1);
  data{'PMSetStatus'} = h;
  tag = find_xml_local(x[2], 'PMSetStatusResponse', 1);
  h =  hash [];
  parse_pmm_PMSetStatusResponse(h, aux1);
  data{'PMSetStatusResponse'} = h;
  tag = find_xml_local(x[2], 'PMERegister', 1);
  h =  hash [];
  parse_prov_PMERegister(h, aux1);
  data{'PMERegister'} = h;
  tag = find_xml_local(x[2], 'PMERegisterResponse', 1);
  h =  hash [];
  parse_prov_PMERegisterResponse(h, aux1);
  data{'PMERegisterResponse'} = h;
  tag = find_xml_local(x[2], 'PMEUpload', 1);
  h =  hash [];
  parse_prov_PMEUpload(h, aux1);
  data{'PMEUpload'} = h;
  tag = find_xml_local(x[2], 'PMEUploadResponse', 1);
  h =  hash [];
  parse_prov_PMEUploadResponse(h, aux1);
  data{'PMEUploadResponse'} = h;
  tag = find_xml_local(x[2], 'PMEDownload', 1);
  h =  hash [];
  parse_prov_PMEDownload(h, aux1);
  data{'PMEDownload'} = h;
  tag = find_xml_local(x[2], 'PMEDownloadResponse', 1);
  h =  hash [];
  parse_prov_PMEDownloadResponse(h, aux1);
  data{'PMEDownloadResponse'} = h;
  tag = find_xml_local(x[2], 'PMEEnable', 1);
  h =  hash [];
  parse_prov_PMEEnable(h, aux1);
  data{'PMEEnable'} = h;
  tag = find_xml_local(x[2], 'PMEEnableResponse', 1);
  h =  hash [];
  parse_prov_PMEEnableResponse(h, aux1);
  data{'PMEEnableResponse'} = h;
  tag = find_xml_local(x[2], 'PMEDisable', 1);
  h =  hash [];
  parse_prov_PMEDisable(h, aux1);
  data{'PMEDisable'} = h;
  tag = find_xml_local(x[2], 'PMEDisableResponse', 1);
  h =  hash [];
  parse_prov_PMEDisableResponse(h, aux1);
  data{'PMEDisableResponse'} = h;
  tag = find_xml_local(x[2], 'PMEDelete', 1);
  h =  hash [];
  parse_prov_PMEDelete(h, aux1);
  data{'PMEDelete'} = h;
  tag = find_xml_local(x[2], 'PMEDeleteResponse', 1);
  h =  hash [];
  parse_prov_PMEDeleteResponse(h, aux1);
  data{'PMEDeleteResponse'} = h;
  tag = find_xml_local(x[2], 'PMEGetInfo', 1);
  h =  hash [];
  parse_prov_PMEGetInfo(h, aux1);
  data{'PMEGetInfo'} = h;
  tag = find_xml_local(x[2], 'PMEGetInfoResponse', 1);
  h =  hash [];
  parse_prov_PMEGetInfoResponse(h, aux1);
  data{'PMEGetInfoResponse'} = h;
  tag = find_xml_local(x[2], 'prov_PMGetStatus', 1);
  h =  hash [];
  parse_prov_PMGetStatus(h, aux1);
  data{'prov_PMGetStatus'} = h;
  tag = find_xml_local(x[2], 'prov_PMGetStatusResponse', 1);
  h =  hash [];
  parse_prov_PMGetStatusResponse(h, aux1);
  data{'prov_PMGetStatusResponse'} = h;
  tag = find_xml_local(x[2], 'prov_PMSetStatus', 1);
  h =  hash [];
  parse_prov_PMSetStatus(h, aux1);
  data{'prov_PMSetStatus'} = h;
  tag = find_xml_local(x[2], 'prov_PMSetStatusResponse', 1);
  h =  hash [];
  parse_prov_PMSetStatusResponse(h, aux1);
  data{'prov_PMSetStatusResponse'} = h;
  tag = find_xml_local(x[2], 'PMGetDescriptor', 1);
  h =  hash [];
  parse_prov_PMGetDescriptor(h, aux1);
  data{'PMGetDescriptor'} = h;
  tag = find_xml_local(x[2], 'PMGetDescriptorResponse', 1);
  h =  hash [];
  parse_prov_PMGetDescriptorResponse(h, aux1);
  data{'PMGetDescriptorResponse'} = h;
  tag = find_xml_local(x[2], 'prov_PMActivate', 1);
  h =  hash [];
  parse_prov_PMActivate(h, aux1);
  data{'prov_PMActivate'} = h;
  tag = find_xml_local(x[2], 'prov_PMActivateResponse', 1);
  h =  hash [];
  parse_prov_PMActivateResponse(h, aux1);
  data{'prov_PMActivateResponse'} = h;
  tag = find_xml_local(x[2], 'prov_PMDeactivate', 1);
  h =  hash [];
  parse_prov_PMDeactivate(h, aux1);
  data{'prov_PMDeactivate'} = h;
  tag = find_xml_local(x[2], 'prov_PMDeactivateResponse', 1);
  h =  hash [];
  parse_prov_PMDeactivateResponse(h, aux1);
  data{'prov_PMDeactivateResponse'} = h;
  tag = find_xml_local(x[2], 'PMRegisterDescriptor', 1);
  h =  hash [];
  parse_prov_PMRegisterDescriptor(h, aux1);
  data{'PMRegisterDescriptor'} = h;
  tag = find_xml_local(x[2], 'PMRegisterDescriptorResponse', 1);
  h =  hash [];
  parse_prov_PMRegisterDescriptorResponse(h, aux1);
  data{'PMRegisterDescriptorResponse'} = h;
  tag = find_xml_local(x[2], 'prov_PMUpdate', 1);
  h =  hash [];
  parse_prov_PMUpdate(h, aux1);
  data{'prov_PMUpdate'} = h;
  tag = find_xml_local(x[2], 'prov_PMUpdateResponse', 1);
  h =  hash [];
  parse_prov_PMUpdateResponse(h, aux1);
  data{'prov_PMUpdateResponse'} = h;
  tag = find_xml_local(x[2], 'prov_PMDelete', 1);
  h =  hash [];
  parse_prov_PMDelete(h, aux1);
  data{'prov_PMDelete'} = h;
  tag = find_xml_local(x[2], 'prov_PMDeleteResponse', 1);
  h =  hash [];
  parse_prov_PMDeleteResponse(h, aux1);
  data{'prov_PMDeleteResponse'} = h;
  tag = find_xml_local(x[2], 'Poll', 1);
  h =  hash [];
  parse_prov_Poll(h, aux1);
  data{'Poll'} = h;
  tag = find_xml_local(x[2], 'PollResponse', 1);
  h =  hash [];
  parse_prov_PollResponse(h, aux1);
  data{'PollResponse'} = h;
  tag = find_xml_local(x[2], 'UpdateEPR', 1);
  h =  hash [];
  parse_prov_UpdateEPR(h, aux1);
  data{'UpdateEPR'} = h;
  tag = find_xml_local(x[2], 'UpdateEPRResponse', 1);
  h =  hash [];
  parse_prov_UpdateEPRResponse(h, aux1);
  data{'UpdateEPRResponse'} = h;
  tag = find_xml_local(x[2], 'GetAssertion', 1);
  h =  hash [];
  parse_idp_GetAssertion(h, aux1);
  data{'GetAssertion'} = h;
  tag = find_xml_local(x[2], 'GetAssertionResponse', 1);
  h =  hash [];
  parse_idp_GetAssertionResponse(h, aux1);
  data{'GetAssertionResponse'} = h;
  tag = find_xml_local(x[2], 'GetProviderInfo', 1);
  h =  hash [];
  parse_idp_GetProviderInfo(h, aux1);
  data{'GetProviderInfo'} = h;
  tag = find_xml_local(x[2], 'GetProviderInfoResponse', 1);
  h =  hash [];
  parse_idp_GetProviderInfoResponse(h, aux1);
  data{'GetProviderInfoResponse'} = h;
  tag = find_xml_local(x[2], 'CreatedStatus', 1);
  h =  hash [];
  parse_idp_CreatedStatus(h, aux1);
  data{'CreatedStatus'} = h;
  tag = find_xml_local(x[2], 'CreatedStatusResponse', 1);
  h =  hash [];
  parse_idp_CreatedStatusResponse(h, aux1);
  data{'CreatedStatusResponse'} = h;
  tag = find_xml_local(x[2], 'shps_Delete', 1);
  h =  hash [];
  parse_shps_Delete(h, aux1);
  data{'shps_Delete'} = h;
  tag = find_xml_local(x[2], 'shps_DeleteResponse', 1);
  h =  hash [];
  parse_shps_DeleteResponse(h, aux1);
  data{'shps_DeleteResponse'} = h;
  tag = find_xml_local(x[2], 'GetStatus', 1);
  h =  hash [];
  parse_shps_GetStatus(h, aux1);
  data{'GetStatus'} = h;
  tag = find_xml_local(x[2], 'GetStatusResponse', 1);
  h =  hash [];
  parse_shps_GetStatusResponse(h, aux1);
  data{'GetStatusResponse'} = h;
  tag = find_xml_local(x[2], 'shps_Query', 1);
  h =  hash [];
  parse_shps_Query(h, aux1);
  data{'shps_Query'} = h;
  tag = find_xml_local(x[2], 'shps_QueryResponse', 1);
  h =  hash [];
  parse_shps_QueryResponse(h, aux1);
  data{'shps_QueryResponse'} = h;
  POPTAG_RAW(x[2],  'Invoke', data.Invoke);
  tag = find_xml_local(x[2], 'InvokeResponse', 1);
  h =  hash [];
  parse_shps_InvokeResponse(h, aux1);
  data{'InvokeResponse'} = h;
  tag = find_xml_local(x[2], 'QueryRegistered', 1);
  h =  hash [];
  parse_shps_QueryRegistered(h, aux1);
  data{'QueryRegistered'} = h;
  tag = find_xml_local(x[2], 'QueryRegisteredResponse', 1);
  h =  hash [];
  parse_shps_QueryRegisteredResponse(h, aux1);
  data{'QueryRegisteredResponse'} = h;
  tag = find_xml_local(x[2], 'Register', 1);
  h =  hash [];
  parse_shps_Register(h, aux1);
  data{'Register'} = h;
  tag = find_xml_local(x[2], 'RegisterResponse', 1);
  h =  hash [];
  parse_shps_RegisterResponse(h, aux1);
  data{'RegisterResponse'} = h;
  tag = find_xml_local(x[2], 'SetStatus', 1);
  h =  hash [];
  parse_shps_SetStatus(h, aux1);
  data{'SetStatus'} = h;
  tag = find_xml_local(x[2], 'SetStatusResponse', 1);
  h =  hash [];
  parse_shps_SetStatusResponse(h, aux1);
  data{'SetStatusResponse'} = h;
  tag = find_xml_local(x[2], 'Update', 1);
  h =  hash [];
  parse_shps_Update(h, aux1);
  data{'Update'} = h;
  tag = find_xml_local(x[2], 'UpdateResponse', 1);
  h =  hash [];
  parse_shps_UpdateResponse(h, aux1);
  data{'UpdateResponse'} = h;
  tag = find_xml_local(x[2], 'shps_Poll', 1);
  h =  hash [];
  parse_shps_Poll(h, aux1);
  data{'shps_Poll'} = h;
  tag = find_xml_local(x[2], 'shps_PollResponse', 1);
  h =  hash [];
  parse_shps_PollResponse(h, aux1);
  data{'shps_PollResponse'} = h;
  tag = find_xml_local(x[2], 'ProxyInvoke', 1);
  h =  hash [];
  parse_shps_ProxyInvoke(h, aux1);
  data{'ProxyInvoke'} = h;
  tag = find_xml_local(x[2], 'ProxyInvokeResponse', 1);
  h =  hash [];
  parse_shps_ProxyInvokeResponse(h, aux1);
  data{'ProxyInvokeResponse'} = h;
  tag = find_xml_local(x[2], 'idhrxml_Create', 1);
  h =  hash [];
  parse_idhrxml_Create(h, aux1);
  data{'idhrxml_Create'} = h;
  tag = find_xml_local(x[2], 'idhrxml_CreateResponse', 1);
  h =  hash [];
  parse_idhrxml_CreateResponse(h, aux1);
  data{'idhrxml_CreateResponse'} = h;
  tag = find_xml_local(x[2], 'idhrxml_Query', 1);
  h =  hash [];
  parse_idhrxml_Query(h, aux1);
  data{'idhrxml_Query'} = h;
  tag = find_xml_local(x[2], 'idhrxml_QueryResponse', 1);
  h =  hash [];
  parse_idhrxml_QueryResponse(h, aux1);
  data{'idhrxml_QueryResponse'} = h;
  tag = find_xml_local(x[2], 'idhrxml_Modify', 1);
  h =  hash [];
  parse_idhrxml_Modify(h, aux1);
  data{'idhrxml_Modify'} = h;
  tag = find_xml_local(x[2], 'idhrxml_ModifyResponse', 1);
  h =  hash [];
  parse_idhrxml_ModifyResponse(h, aux1);
  data{'idhrxml_ModifyResponse'} = h;
  tag = find_xml_local(x[2], 'idhrxml_Delete', 1);
  h =  hash [];
  parse_idhrxml_Delete(h, aux1);
  data{'idhrxml_Delete'} = h;
  tag = find_xml_local(x[2], 'idhrxml_DeleteResponse', 1);
  h =  hash [];
  parse_idhrxml_DeleteResponse(h, aux1);
  data{'idhrxml_DeleteResponse'} = h;
  tag = find_xml_local(x[2], 'idhrxml_Notify', 1);
  h =  hash [];
  parse_idhrxml_Notify(h, aux1);
  data{'idhrxml_Notify'} = h;
  tag = find_xml_local(x[2], 'idhrxml_NotifyResponse', 1);
  h =  hash [];
  parse_idhrxml_NotifyResponse(h, aux1);
  data{'idhrxml_NotifyResponse'} = h;

}

function build_e_Body(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);

  push body, build_sp_ArtifactResolve(data{'ArtifactResolve'});
  push body, build_sp_ArtifactResponse(data{'ArtifactResponse'});
  push body, build_sp_ManageNameIDRequest(data{'ManageNameIDRequest'});
  push body, build_sp_ManageNameIDResponse(data{'ManageNameIDResponse'});
  push body, build_sp_LogoutRequest(data{'LogoutRequest'});
  push body, build_sp_LogoutResponse(data{'LogoutResponse'});
  push body, build_sp_NameIDMappingRequest(data{'NameIDMappingRequest'});
  push body, build_sp_NameIDMappingResponse(data{'NameIDMappingResponse'});
  push body, build_sp_AttributeQuery(data{'AttributeQuery'});
  push body, build_sp_AuthnQuery(data{'AuthnQuery'});
  push body, build_sp_AuthzDecisionQuery(data{'AuthzDecisionQuery'});
  push body, build_sp_AssertionIDRequest(data{'AssertionIDRequest'});
  push body, build_sp_Response(data{'Response'});
  push body, build_sp_AuthnRequest(data{'AuthnRequest'});
  push body, build_sp11_Request(data{'Request'});
  push body, build_sp11_Response(data{'sp11_Response'});
  push body, build_ff12_RegisterNameIdentifierRequest(data{'RegisterNameIdentifierRequest'});
  push body, build_ff12_RegisterNameIdentifierResponse(data{'RegisterNameIdentifierResponse'});
  push body, build_ff12_FederationTerminationNotification(data{'FederationTerminationNotification'});
  push body, build_ff12_LogoutRequest(data{'ff12_LogoutRequest'});
  push body, build_ff12_LogoutResponse(data{'ff12_LogoutResponse'});
  push body, build_ff12_NameIdentifierMappingRequest(data{'NameIdentifierMappingRequest'});
  push body, build_ff12_NameIdentifierMappingResponse(data{'NameIdentifierMappingResponse'});
  push body, build_xasp_XACMLAuthzDecisionQuery(data{'XACMLAuthzDecisionQuery'});
  push body, build_xasp_XACMLPolicyQuery(data{'XACMLPolicyQuery'});
  push body, build_xaspcd1_XACMLAuthzDecisionQuery(data{'xaspcd1_XACMLAuthzDecisionQuery'});
  push body, build_xaspcd1_XACMLPolicyQuery(data{'xaspcd1_XACMLPolicyQuery'});
  push body, build_xac_Request(data{'xac_Request'});
  push body, build_xac_Response(data{'xac_Response'});
  push body, build_di_Query(data{'Query'});
  push body, build_di_QueryResponse(data{'QueryResponse'});
  push body, build_di12_Query(data{'di12_Query'});
  push body, build_di12_QueryResponse(data{'di12_QueryResponse'});
  push body, build_di12_Modify(data{'Modify'});
  push body, build_di12_ModifyResponse(data{'ModifyResponse'});
  push body, build_e_Fault(data{'Fault'});
  push body, build_di_SvcMDAssociationAdd(data{'SvcMDAssociationAdd'});
  push body, build_di_SvcMDAssociationAddResponse(data{'SvcMDAssociationAddResponse'});
  push body, build_di_SvcMDAssociationDelete(data{'SvcMDAssociationDelete'});
  push body, build_di_SvcMDAssociationDeleteResponse(data{'SvcMDAssociationDeleteResponse'});
  push body, build_di_SvcMDAssociationQuery(data{'SvcMDAssociationQuery'});
  push body, build_di_SvcMDAssociationQueryResponse(data{'SvcMDAssociationQueryResponse'});
  push body, build_di_SvcMDRegister(data{'SvcMDRegister'});
  push body, build_di_SvcMDRegisterResponse(data{'SvcMDRegisterResponse'});
  push body, build_di_SvcMDDelete(data{'SvcMDDelete'});
  push body, build_di_SvcMDDeleteResponse(data{'SvcMDDeleteResponse'});
  push body, build_di_SvcMDQuery(data{'SvcMDQuery'});
  push body, build_di_SvcMDQueryResponse(data{'SvcMDQueryResponse'});
  push body, build_di_SvcMDReplace(data{'SvcMDReplace'});
  push body, build_di_SvcMDReplaceResponse(data{'SvcMDReplaceResponse'});
  push body, build_dap_Create(data{'Create'});
  push body, build_dap_CreateResponse(data{'CreateResponse'});
  push body, build_dap_Query(data{'dap_Query'});
  push body, build_dap_QueryResponse(data{'dap_QueryResponse'});
  push body, build_dap_Modify(data{'dap_Modify'});
  push body, build_dap_ModifyResponse(data{'dap_ModifyResponse'});
  push body, build_dap_Delete(data{'Delete'});
  push body, build_dap_DeleteResponse(data{'DeleteResponse'});
  push body, build_dap_Notify(data{'Notify'});
  push body, build_dap_NotifyResponse(data{'NotifyResponse'});
  push body, build_ps_AddEntityRequest(data{'AddEntityRequest'});
  push body, build_ps_AddEntityResponse(data{'AddEntityResponse'});
  push body, build_ps_AddKnownEntityRequest(data{'AddKnownEntityRequest'});
  push body, build_ps_AddKnownEntityResponse(data{'AddKnownEntityResponse'});
  push body, build_ps_AddCollectionRequest(data{'AddCollectionRequest'});
  push body, build_ps_AddCollectionResponse(data{'AddCollectionResponse'});
  push body, build_ps_AddToCollectionRequest(data{'AddToCollectionRequest'});
  push body, build_ps_AddToCollectionResponse(data{'AddToCollectionResponse'});
  push body, build_ps_RemoveEntityRequest(data{'RemoveEntityRequest'});
  push body, build_ps_RemoveEntityResponse(data{'RemoveEntityResponse'});
  push body, build_ps_RemoveCollectionRequest(data{'RemoveCollectionRequest'});
  push body, build_ps_RemoveCollectionResponse(data{'RemoveCollectionResponse'});
  push body, build_ps_RemoveFromCollectionRequest(data{'RemoveFromCollectionRequest'});
  push body, build_ps_RemoveFromCollectionResponse(data{'RemoveFromCollectionResponse'});
  push body, build_ps_ListMembersRequest(data{'ListMembersRequest'});
  push body, build_ps_ListMembersResponse(data{'ListMembersResponse'});
  push body, build_ps_QueryObjectsRequest(data{'QueryObjectsRequest'});
  push body, build_ps_QueryObjectsResponse(data{'QueryObjectsResponse'});
  push body, build_ps_GetObjectInfoRequest(data{'GetObjectInfoRequest'});
  push body, build_ps_GetObjectInfoResponse(data{'GetObjectInfoResponse'});
  push body, build_ps_SetObjectInfoRequest(data{'SetObjectInfoRequest'});
  push body, build_ps_SetObjectInfoResponse(data{'SetObjectInfoResponse'});
  push body, build_ps_TestMembershipRequest(data{'TestMembershipRequest'});
  push body, build_ps_TestMembershipResponse(data{'TestMembershipResponse'});
  push body, build_ps_ResolveIdentifierRequest(data{'ResolveIdentifierRequest'});
  push body, build_ps_ResolveIdentifierResponse(data{'ResolveIdentifierResponse'});
  push body, build_ps_Notify(data{'ps_Notify'});
  push body, build_ps_NotifyResponse(data{'ps_NotifyResponse'});
  push body, build_im_IdentityMappingRequest(data{'IdentityMappingRequest'});
  push body, build_im_IdentityMappingResponse(data{'IdentityMappingResponse'});
  push body, build_as_SASLRequest(data{'SASLRequest'});
  push body, build_as_SASLResponse(data{'SASLResponse'});
  push body, build_mm7_SubmitReq(data{'SubmitReq'});
  push body, build_mm7_SubmitRsp(data{'SubmitRsp'});
  push body, build_mm7_DeliverReq(data{'DeliverReq'});
  push body, build_mm7_DeliverRsp(data{'DeliverRsp'});
  push body, build_mm7_CancelReq(data{'CancelReq'});
  push body, build_mm7_CancelRsp(data{'CancelRsp'});
  push body, build_mm7_ReplaceReq(data{'ReplaceReq'});
  push body, build_mm7_ReplaceRsp(data{'ReplaceRsp'});
  push body, build_mm7_extendedCancelReq(data{'extendedCancelReq'});
  push body, build_mm7_extendedCancelRsp(data{'extendedCancelRsp'});
  push body, build_mm7_extendedReplaceReq(data{'extendedReplaceReq'});
  push body, build_mm7_extendedReplaceRsp(data{'extendedReplaceRsp'});
  push body, build_mm7_DeliveryReportReq(data{'DeliveryReportReq'});
  push body, build_mm7_DeliveryReportRsp(data{'DeliveryReportRsp'});
  push body, build_mm7_ReadReplyReq(data{'ReadReplyReq'});
  push body, build_mm7_ReadReplyRsp(data{'ReadReplyRsp'});
  push body, build_mm7_RSErrorRsp(data{'RSErrorRsp'});
  push body, build_mm7_VASPErrorRsp(data{'VASPErrorRsp'});
  push body, build_mm7_QueryStatusReq(data{'QueryStatusReq'});
  push body, build_mm7_QueryStatusRsp(data{'QueryStatusRsp'});
  push body, build_cb_Query(data{'cb_Query'});
  push body, build_cb_QueryResponse(data{'cb_QueryResponse'});
  push body, build_cb_Create(data{'cb_Create'});
  push body, build_cb_CreateResponse(data{'cb_CreateResponse'});
  push body, build_cb_Delete(data{'cb_Delete'});
  push body, build_cb_DeleteResponse(data{'cb_DeleteResponse'});
  push body, build_cb_Modify(data{'cb_Modify'});
  push body, build_cb_ModifyResponse(data{'cb_ModifyResponse'});
  push body, build_cb_Notify(data{'cb_Notify'});
  push body, build_cb_NotifyResponse(data{'cb_NotifyResponse'});
  push body, build_cb_ReportUsage(data{'ReportUsage'});
  push body, build_cb_ReportUsageResponse(data{'ReportUsageResponse'});
  push body, build_gl_Query(data{'gl_Query'});
  push body, build_gl_QueryResponse(data{'gl_QueryResponse'});
  push body, build_gl_Create(data{'gl_Create'});
  push body, build_gl_CreateResponse(data{'gl_CreateResponse'});
  push body, build_gl_Delete(data{'gl_Delete'});
  push body, build_gl_DeleteResponse(data{'gl_DeleteResponse'});
  push body, build_gl_Modify(data{'gl_Modify'});
  push body, build_gl_ModifyResponse(data{'gl_ModifyResponse'});
  push body, build_gl_Notify(data{'gl_Notify'});
  push body, build_gl_NotifyResponse(data{'gl_NotifyResponse'});
  push body, build_demomed_StoreObjectRequest(data{'StoreObjectRequest'});
  push body, build_demomed_StoreObjectResponse(data{'StoreObjectResponse'});
  push body, build_demomed_GetObjectListRequest(data{'GetObjectListRequest'});
  push body, build_demomed_GetObjectListResponse(data{'GetObjectListResponse'});
  push body, build_demomed_GetObjectRequest(data{'GetObjectRequest'});
  push body, build_demomed_GetObjectResponse(data{'GetObjectResponse'});
  push body, build_demomed_DeleteObjectRequest(data{'DeleteObjectRequest'});
  push body, build_demomed_DeleteObjectResponse(data{'DeleteObjectResponse'});
  push body, build_pmm_Provision(data{'Provision'});
  push body, build_pmm_ProvisionResponse(data{'ProvisionResponse'});
  push body, build_pmm_PMActivate(data{'PMActivate'});
  push body, build_pmm_PMActivateResponse(data{'PMActivateResponse'});
  push body, build_pmm_PMDeactivate(data{'PMDeactivate'});
  push body, build_pmm_PMDeactivateResponse(data{'PMDeactivateResponse'});
  push body, build_pmm_PMDelete(data{'PMDelete'});
  push body, build_pmm_PMDeleteResponse(data{'PMDeleteResponse'});
  push body, build_pmm_PMUpdate(data{'PMUpdate'});
  push body, build_pmm_PMUpdateResponse(data{'PMUpdateResponse'});
  push body, build_pmm_PMGetStatus(data{'PMGetStatus'});
  push body, build_pmm_PMGetStatusResponse(data{'PMGetStatusResponse'});
  push body, build_pmm_PMSetStatus(data{'PMSetStatus'});
  push body, build_pmm_PMSetStatusResponse(data{'PMSetStatusResponse'});
  push body, build_prov_PMERegister(data{'PMERegister'});
  push body, build_prov_PMERegisterResponse(data{'PMERegisterResponse'});
  push body, build_prov_PMEUpload(data{'PMEUpload'});
  push body, build_prov_PMEUploadResponse(data{'PMEUploadResponse'});
  push body, build_prov_PMEDownload(data{'PMEDownload'});
  push body, build_prov_PMEDownloadResponse(data{'PMEDownloadResponse'});
  push body, build_prov_PMEEnable(data{'PMEEnable'});
  push body, build_prov_PMEEnableResponse(data{'PMEEnableResponse'});
  push body, build_prov_PMEDisable(data{'PMEDisable'});
  push body, build_prov_PMEDisableResponse(data{'PMEDisableResponse'});
  push body, build_prov_PMEDelete(data{'PMEDelete'});
  push body, build_prov_PMEDeleteResponse(data{'PMEDeleteResponse'});
  push body, build_prov_PMEGetInfo(data{'PMEGetInfo'});
  push body, build_prov_PMEGetInfoResponse(data{'PMEGetInfoResponse'});
  push body, build_prov_PMGetStatus(data{'prov_PMGetStatus'});
  push body, build_prov_PMGetStatusResponse(data{'prov_PMGetStatusResponse'});
  push body, build_prov_PMSetStatus(data{'prov_PMSetStatus'});
  push body, build_prov_PMSetStatusResponse(data{'prov_PMSetStatusResponse'});
  push body, build_prov_PMGetDescriptor(data{'PMGetDescriptor'});
  push body, build_prov_PMGetDescriptorResponse(data{'PMGetDescriptorResponse'});
  push body, build_prov_PMActivate(data{'prov_PMActivate'});
  push body, build_prov_PMActivateResponse(data{'prov_PMActivateResponse'});
  push body, build_prov_PMDeactivate(data{'prov_PMDeactivate'});
  push body, build_prov_PMDeactivateResponse(data{'prov_PMDeactivateResponse'});
  push body, build_prov_PMRegisterDescriptor(data{'PMRegisterDescriptor'});
  push body, build_prov_PMRegisterDescriptorResponse(data{'PMRegisterDescriptorResponse'});
  push body, build_prov_PMUpdate(data{'prov_PMUpdate'});
  push body, build_prov_PMUpdateResponse(data{'prov_PMUpdateResponse'});
  push body, build_prov_PMDelete(data{'prov_PMDelete'});
  push body, build_prov_PMDeleteResponse(data{'prov_PMDeleteResponse'});
  push body, build_prov_Poll(data{'Poll'});
  push body, build_prov_PollResponse(data{'PollResponse'});
  push body, build_prov_UpdateEPR(data{'UpdateEPR'});
  push body, build_prov_UpdateEPRResponse(data{'UpdateEPRResponse'});
  push body, build_idp_GetAssertion(data{'GetAssertion'});
  push body, build_idp_GetAssertionResponse(data{'GetAssertionResponse'});
  push body, build_idp_GetProviderInfo(data{'GetProviderInfo'});
  push body, build_idp_GetProviderInfoResponse(data{'GetProviderInfoResponse'});
  push body, build_idp_CreatedStatus(data{'CreatedStatus'});
  push body, build_idp_CreatedStatusResponse(data{'CreatedStatusResponse'});
  push body, build_shps_Delete(data{'shps_Delete'});
  push body, build_shps_DeleteResponse(data{'shps_DeleteResponse'});
  push body, build_shps_GetStatus(data{'GetStatus'});
  push body, build_shps_GetStatusResponse(data{'GetStatusResponse'});
  push body, build_shps_Query(data{'shps_Query'});
  push body, build_shps_QueryResponse(data{'shps_QueryResponse'});
  PUSHTAG_RAW(body, 'Invoke', data.Invoke);
  push body, build_shps_InvokeResponse(data{'InvokeResponse'});
  push body, build_shps_QueryRegistered(data{'QueryRegistered'});
  push body, build_shps_QueryRegisteredResponse(data{'QueryRegisteredResponse'});
  push body, build_shps_Register(data{'Register'});
  push body, build_shps_RegisterResponse(data{'RegisterResponse'});
  push body, build_shps_SetStatus(data{'SetStatus'});
  push body, build_shps_SetStatusResponse(data{'SetStatusResponse'});
  push body, build_shps_Update(data{'Update'});
  push body, build_shps_UpdateResponse(data{'UpdateResponse'});
  push body, build_shps_Poll(data{'shps_Poll'});
  push body, build_shps_PollResponse(data{'shps_PollResponse'});
  push body, build_shps_ProxyInvoke(data{'ProxyInvoke'});
  push body, build_shps_ProxyInvokeResponse(data{'ProxyInvokeResponse'});
  push body, build_idhrxml_Create(data{'idhrxml_Create'});
  push body, build_idhrxml_CreateResponse(data{'idhrxml_CreateResponse'});
  push body, build_idhrxml_Query(data{'idhrxml_Query'});
  push body, build_idhrxml_QueryResponse(data{'idhrxml_QueryResponse'});
  push body, build_idhrxml_Modify(data{'idhrxml_Modify'});
  push body, build_idhrxml_ModifyResponse(data{'idhrxml_ModifyResponse'});
  push body, build_idhrxml_Delete(data{'idhrxml_Delete'});
  push body, build_idhrxml_DeleteResponse(data{'idhrxml_DeleteResponse'});
  push body, build_idhrxml_Notify(data{'idhrxml_Notify'});
  push body, build_idhrxml_NotifyResponse(data{'idhrxml_NotifyResponse'});

  return TAG('e:Body', attr, body);
}




function parse_e_Envelope(data, x) {
  POPATTR(x[1], 'id', data.id);

  tag = find_xml_local(x[2], 'Header', 1);
  h =  hash [];
  parse_e_Header(h, aux1);
  data{'Header'} = h;
  tag = find_xml_local(x[2], 'Body', 1);
  h =  hash [];
  parse_e_Body(h, aux1);
  data{'Body'} = h;

}

function build_e_Envelope(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);

  push body, build_e_Header(data{'Header'});
  push body, build_e_Body(data{'Body'});

  return TAG('e:Envelope', attr, body);
}




function parse_e_Fault(data, x) {

  POPTAG_RAW(x[2],  'faultcode', data.faultcode);
  POPTAG_RAW(x[2],  'faultstring', data.faultstring);
  POPTAG_RAW(x[2],  'faultactor', data.faultactor);
  tag = find_xml_local(x[2], 'detail', 1);
  h =  hash [];
  parse_e_detail(h, aux1);
  data{'detail'} = h;

}

function build_e_Fault(data) {
  attr = [];
  body = [];

  PUSHTAG_RAW(body, 'faultcode', data.faultcode);
  PUSHTAG_RAW(body, 'faultstring', data.faultstring);
  PUSHTAG_RAW(body, 'faultactor', data.faultactor);
  push body, build_e_detail(data{'detail'});

  return TAG('e:Fault', attr, body);
}




function parse_e_Header(data, x) {
  POPATTR(x[1], 'id', data.id);

  tag = find_xml_local(x[2], 'Request', 1);
  h =  hash [];
  parse_paos_Request(h, aux1);
  data{'Request'} = h;
  tag = find_xml_local(x[2], 'Response', 1);
  h =  hash [];
  parse_paos_Response(h, aux1);
  data{'Response'} = h;
  tag = find_xml_local(x[2], 'ecp_Request', 1);
  h =  hash [];
  parse_ecp_Request(h, aux1);
  data{'ecp_Request'} = h;
  tag = find_xml_local(x[2], 'ecp_Response', 1);
  h =  hash [];
  parse_ecp_Response(h, aux1);
  data{'ecp_Response'} = h;
  tag = find_xml_local(x[2], 'RelayState', 1);
  h =  hash [];
  parse_ecp_RelayState(h, aux1);
  data{'RelayState'} = h;
  tag = find_xml_local(x[2], 'Framework', 1);
  h =  hash [];
  parse_sbf_Framework(h, aux1);
  data{'Framework'} = h;
  tag = find_xml_local(x[2], 'Sender', 1);
  h =  hash [];
  parse_b_Sender(h, aux1);
  data{'Sender'} = h;
  tag = find_xml_local(x[2], 'MessageID', 1);
  h =  hash [];
  parse_a_MessageID(h, aux1);
  data{'MessageID'} = h;
  tag = find_xml_local(x[2], 'Security', 1);
  h =  hash [];
  parse_wsse_Security(h, aux1);
  data{'Security'} = h;
  tag = find_xml_local(x[2], 'Status', 1);
  h =  hash [];
  parse_tas3_Status(h, aux1);
  data{'Status'} = h;
  tag = find_xml_local(x[2], 'RelatesTo', 1);
  h =  hash [];
  parse_a_RelatesTo(h, aux1);
  data{'RelatesTo'} = h;
  tag = find_xml_local(x[2], 'ReplyTo', 1);
  h =  hash [];
  parse_a_ReplyTo(h, aux1);
  data{'ReplyTo'} = h;
  tag = find_xml_local(x[2], 'From', 1);
  h =  hash [];
  parse_a_From(h, aux1);
  data{'From'} = h;
  tag = find_xml_local(x[2], 'FaultTo', 1);
  h =  hash [];
  parse_a_FaultTo(h, aux1);
  data{'FaultTo'} = h;
  tag = find_xml_local(x[2], 'To', 1);
  h =  hash [];
  parse_a_To(h, aux1);
  data{'To'} = h;
  tag = find_xml_local(x[2], 'Action', 1);
  h =  hash [];
  parse_a_Action(h, aux1);
  data{'Action'} = h;
  tag = find_xml_local(x[2], 'ReferenceParameters', 1);
  h =  hash [];
  parse_a_ReferenceParameters(h, aux1);
  data{'ReferenceParameters'} = h;
  tag = find_xml_local(x[2], 'b_Framework', 1);
  h =  hash [];
  parse_b_Framework(h, aux1);
  data{'b_Framework'} = h;
  tag = find_xml_local(x[2], 'TargetIdentity', 1);
  h =  hash [];
  parse_b_TargetIdentity(h, aux1);
  data{'TargetIdentity'} = h;
  tag = find_xml_local(x[2], 'CredentialsContext', 1);
  h =  hash [];
  parse_b_CredentialsContext(h, aux1);
  data{'CredentialsContext'} = h;
  tag = find_xml_local(x[2], 'EndpointUpdate', 1);
  h =  hash [];
  parse_b_EndpointUpdate(h, aux1);
  data{'EndpointUpdate'} = h;
  tag = find_xml_local(x[2], 'Timeout', 1);
  h =  hash [];
  parse_b_Timeout(h, aux1);
  data{'Timeout'} = h;
  tag = find_xml_local(x[2], 'ProcessingContext', 1);
  h =  hash [];
  parse_b_ProcessingContext(h, aux1);
  data{'ProcessingContext'} = h;
  tag = find_xml_local(x[2], 'Consent', 1);
  h =  hash [];
  parse_b_Consent(h, aux1);
  data{'Consent'} = h;
  tag = find_xml_local(x[2], 'UsageDirective', 1);
  h =  hash [];
  parse_b_UsageDirective(h, aux1);
  data{'UsageDirective'} = h;
  tag = find_xml_local(x[2], 'ApplicationEPR', 1);
  h =  hash [];
  parse_b_ApplicationEPR(h, aux1);
  data{'ApplicationEPR'} = h;
  tag = find_xml_local(x[2], 'UserInteraction', 1);
  h =  hash [];
  parse_b_UserInteraction(h, aux1);
  data{'UserInteraction'} = h;
  tag = find_xml_local(x[2], 'RedirectRequest', 1);
  h =  hash [];
  parse_b_RedirectRequest(h, aux1);
  data{'RedirectRequest'} = h;
  tag = find_xml_local(x[2], 'Correlation', 1);
  h =  hash [];
  parse_b12_Correlation(h, aux1);
  data{'Correlation'} = h;
  tag = find_xml_local(x[2], 'Provider', 1);
  h =  hash [];
  parse_b12_Provider(h, aux1);
  data{'Provider'} = h;
  tag = find_xml_local(x[2], 'b12_ProcessingContext', 1);
  h =  hash [];
  parse_b12_ProcessingContext(h, aux1);
  data{'b12_ProcessingContext'} = h;
  tag = find_xml_local(x[2], 'b12_Consent', 1);
  h =  hash [];
  parse_b12_Consent(h, aux1);
  data{'b12_Consent'} = h;
  tag = find_xml_local(x[2], 'b12_UsageDirective', 1);
  h =  hash [];
  parse_b12_UsageDirective(h, aux1);
  data{'b12_UsageDirective'} = h;
  tag = find_xml_local(x[2], 'TransactionID', 1);
  h =  hash [];
  parse_mm7_TransactionID(h, aux1);
  data{'TransactionID'} = h;
  tag = find_xml_local(x[2], 'Credentials', 1);
  h =  hash [];
  parse_tas3_Credentials(h, aux1);
  data{'Credentials'} = h;
  tag = find_xml_local(x[2], 'ESLPolicies', 1);
  h =  hash [];
  parse_tas3_ESLPolicies(h, aux1);
  data{'ESLPolicies'} = h;

}

function build_e_Header(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);

  push body, build_paos_Request(data{'Request'});
  push body, build_paos_Response(data{'Response'});
  push body, build_ecp_Request(data{'ecp_Request'});
  push body, build_ecp_Response(data{'ecp_Response'});
  push body, build_ecp_RelayState(data{'RelayState'});
  push body, build_sbf_Framework(data{'Framework'});
  push body, build_b_Sender(data{'Sender'});
  push body, build_a_MessageID(data{'MessageID'});
  push body, build_wsse_Security(data{'Security'});
  push body, build_tas3_Status(data{'Status'});
  push body, build_a_RelatesTo(data{'RelatesTo'});
  push body, build_a_ReplyTo(data{'ReplyTo'});
  push body, build_a_From(data{'From'});
  push body, build_a_FaultTo(data{'FaultTo'});
  push body, build_a_To(data{'To'});
  push body, build_a_Action(data{'Action'});
  push body, build_a_ReferenceParameters(data{'ReferenceParameters'});
  push body, build_b_Framework(data{'b_Framework'});
  push body, build_b_TargetIdentity(data{'TargetIdentity'});
  push body, build_b_CredentialsContext(data{'CredentialsContext'});
  push body, build_b_EndpointUpdate(data{'EndpointUpdate'});
  push body, build_b_Timeout(data{'Timeout'});
  push body, build_b_ProcessingContext(data{'ProcessingContext'});
  push body, build_b_Consent(data{'Consent'});
  push body, build_b_UsageDirective(data{'UsageDirective'});
  push body, build_b_ApplicationEPR(data{'ApplicationEPR'});
  push body, build_b_UserInteraction(data{'UserInteraction'});
  push body, build_b_RedirectRequest(data{'RedirectRequest'});
  push body, build_b12_Correlation(data{'Correlation'});
  push body, build_b12_Provider(data{'Provider'});
  push body, build_b12_ProcessingContext(data{'b12_ProcessingContext'});
  push body, build_b12_Consent(data{'b12_Consent'});
  push body, build_b12_UsageDirective(data{'b12_UsageDirective'});
  push body, build_mm7_TransactionID(data{'TransactionID'});
  push body, build_tas3_Credentials(data{'Credentials'});
  push body, build_tas3_ESLPolicies(data{'ESLPolicies'});

  return TAG('e:Header', attr, body);
}




function parse_e_detail(data, x) {

  for (i=1; tag = find_xml_local(x[2], 'Status', i); ++i) {
    h =  hash [];
    parse_lu_Status(h, tag);
    push data{'Status'}, h;
  }

}

function build_e_detail(data) {
  attr = [];
  body = [];

  for d(data{'Status'}) push body,build_lu_Status(d);

  return TAG('e:detail', attr, body);
}


/* EOF -- c/zx-e.ds */
