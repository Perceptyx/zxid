/* c/zx-wsu.ds - WARNING: This file was auto generated by xsd2sg.pl. DO NOT EDIT!
 * $Id$ */
/* Code generation design Copyright (c) 2006 Sampo Kellomaki (sampo@iki.fi),
 * All Rights Reserved. NO WARRANTY. See file COPYING for terms and conditions
 * of use. Some aspects of code generation were driven by schema
 * descriptions that were used as input and may be subject to their own copyright.
 * Code generation uses a template, whose copyright statement follows. */

/** ds-templ.c  -  DirectoryScript template, used in code generation
 ** Copyright (c) 2007 Symlabs (symlabs@symlabs.com), All Rights Reserved.
 ** Author: Sampo Kellomaki (sampo@iki.fi)
 ** This is confidential unpublished proprietary source code of the author.
 ** NO WARRANTY, not even implied warranties. Contains trade secrets.
 ** Distribution prohibited unless authorized in writing.
 ** Licensed under Apache License 2.0, see file COPYING.
 ** Id: ds-templ.c,v 1.1 2007-08-10 17:44:49 sampo Exp $
 **
 ** 6.6.2007, created, Sampo Kellomaki (sampo@iki.fi)
 **
 ** N.B: This template is meant to be processed by pd/xsd2sg.pl. Beware
 ** of special markers that xsd2sg.pl expects to find and understand.
 **/



function parse_wsu_Created(data, x) {
  POPATTR(x[1], 'ID', data.ID);
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'wsu_Id', data.wsu_Id);


}

function build_wsu_Created(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'ID', data.ID);
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'wsu_Id', data.wsu_Id);


  return TAG('wsu:Created', attr, body);
}




function parse_wsu_Expires(data, x) {
  POPATTR(x[1], 'ID', data.ID);
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'wsu_Id', data.wsu_Id);


}

function build_wsu_Expires(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'ID', data.ID);
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'wsu_Id', data.wsu_Id);


  return TAG('wsu:Expires', attr, body);
}




function parse_wsu_Timestamp(data, x) {
  POPATTR(x[1], 'ID', data.ID);
  POPATTR(x[1], 'id', data.id);
  POPATTR(x[1], 'wsu_Id', data.wsu_Id);

  tag = find_xml_local(x[2], 'Created', 1);
  h =  hash [];
  parse_wsu_Created(h, aux1);
  data{'Created'} = h;
  tag = find_xml_local(x[2], 'Expires', 1);
  h =  hash [];
  parse_wsu_Expires(h, aux1);
  data{'Expires'} = h;

}

function build_wsu_Timestamp(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'ID', data.ID);
  PUSHATTR(attr, 'id', data.id);
  PUSHATTR(attr, 'wsu_Id', data.wsu_Id);

  push body, build_wsu_Created(data{'Created'});
  push body, build_wsu_Expires(data{'Expires'});

  return TAG('wsu:Timestamp', attr, body);
}


/* EOF -- c/zx-wsu.ds */
