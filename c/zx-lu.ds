/* c/zx-lu.ds - WARNING: This file was auto generated by xsd2sg.pl. DO NOT EDIT!
 * $Id$ */
/* Code generation design Copyright (c) 2006 Sampo Kellomaki (sampo@iki.fi),
 * All Rights Reserved. NO WARRANTY. See file COPYING for terms and conditions
 * of use. Some aspects of code generation were driven by schema
 * descriptions that were used as input and may be subject to their own copyright.
 * Code generation uses a template, whose copyright statement follows. */

/** ds-templ.c  -  DirectoryScript template, used in code generation
 ** Copyright (c) 2007 Symlabs (symlabs@symlabs.com), All Rights Reserved.
 ** Author: Sampo Kellomaki (sampo@iki.fi)
 ** This is confidential unpublished proprietary source code of the author.
 ** NO WARRANTY, not even implied warranties. Contains trade secrets.
 ** Distribution prohibited unless authorized in writing.
 ** Licensed under Apache License 2.0, see file COPYING.
 ** Id: ds-templ.c,v 1.1 2007-08-10 17:44:49 sampo Exp $
 **
 ** 6.6.2007, created, Sampo Kellomaki (sampo@iki.fi)
 **
 ** N.B: This template is meant to be processed by pd/xsd2sg.pl. Beware
 ** of special markers that xsd2sg.pl expects to find and understand.
 **/



function parse_lu_Extension(data, x) {


}

function build_lu_Extension(data) {
  attr = [];
  body = [];


  return TAG('lu:Extension', attr, body);
}




function parse_lu_Status(data, x) {
  POPATTR(x[1], 'code', data.code);
  POPATTR(x[1], 'comment', data.comment);
  POPATTR(x[1], 'ref', data.ref);

  for (i=1; tag = find_xml_local(x[2], 'Status', i); ++i) {
    h =  hash [];
    parse_lu_Status(h, tag);
    push data{'Status'}, h;
  }

}

function build_lu_Status(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'code', data.code);
  PUSHATTR(attr, 'comment', data.comment);
  PUSHATTR(attr, 'ref', data.ref);

  for d(data{'Status'}) push body,build_lu_Status(d);

  return TAG('lu:Status', attr, body);
}




function parse_lu_TestResult(data, x) {
  POPATTR(x[1], 'itemIDRef', data.itemIDRef);


}

function build_lu_TestResult(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'itemIDRef', data.itemIDRef);


  return TAG('lu:TestResult', attr, body);
}


/* EOF -- c/zx-lu.ds */
