/* c/zx-sec12.ds - WARNING: This file was auto generated by xsd2sg.pl. DO NOT EDIT!
 * $Id$ */
/* Code generation design Copyright (c) 2006 Sampo Kellomaki (sampo@iki.fi),
 * All Rights Reserved. NO WARRANTY. See file COPYING for terms and conditions
 * of use. Some aspects of code generation were driven by schema
 * descriptions that were used as input and may be subject to their own copyright.
 * Code generation uses a template, whose copyright statement follows. */

/** ds-templ.c  -  DirectoryScript template, used in code generation
 ** Copyright (c) 2007 Symlabs (symlabs@symlabs.com), All Rights Reserved.
 ** Author: Sampo Kellomaki (sampo@iki.fi)
 ** This is confidential unpublished proprietary source code of the author.
 ** NO WARRANTY, not even implied warranties. Contains trade secrets.
 ** Distribution prohibited unless authorized in writing.
 ** Licensed under Apache License 2.0, see file COPYING.
 ** Id: ds-templ.c,v 1.1 2007-08-10 17:44:49 sampo Exp $
 **
 ** 6.6.2007, created, Sampo Kellomaki (sampo@iki.fi)
 **
 ** N.B: This template is meant to be processed by pd/xsd2sg.pl. Beware
 ** of special markers that xsd2sg.pl expects to find and understand.
 **/



function parse_sec12_ProxyInfoConfirmationData(data, x) {
  POPATTR(x[1], 'id', data.id);

  POPTAG_RAW(x[2],  'AssertionIDReference', data.AssertionIDReference);
  POPTAG_RAW(x[2],  'Issuer', data.Issuer);
  POPTAG_RAW(x[2],  'IssueInstant', data.IssueInstant);
  tag = find_xml_local(x[2], 'Signature', 1);
  h =  hash [];
  parse_ds_Signature(h, aux1);
  data{'Signature'} = h;

}

function build_sec12_ProxyInfoConfirmationData(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'id', data.id);

  PUSHTAG_RAW(body, 'AssertionIDReference', data.AssertionIDReference);
  PUSHTAG_RAW(body, 'Issuer', data.Issuer);
  PUSHTAG_RAW(body, 'IssueInstant', data.IssueInstant);
  push body, build_ds_Signature(data{'Signature'});

  return TAG('sec12:ProxyInfoConfirmationData', attr, body);
}




function parse_sec12_ProxySubject(data, x) {

  tag = find_xml_local(x[2], 'NameIdentifier', 1);
  h =  hash [];
  parse_sa11_NameIdentifier(h, aux1);
  data{'NameIdentifier'} = h;
  tag = find_xml_local(x[2], 'SubjectConfirmation', 1);
  h =  hash [];
  parse_sa11_SubjectConfirmation(h, aux1);
  data{'SubjectConfirmation'} = h;

}

function build_sec12_ProxySubject(data) {
  attr = [];
  body = [];

  push body, build_sa11_NameIdentifier(data{'NameIdentifier'});
  push body, build_sa11_SubjectConfirmation(data{'SubjectConfirmation'});

  return TAG('sec12:ProxySubject', attr, body);
}




function parse_sec12_ProxyTransitedStatement(data, x) {

  tag = find_xml_local(x[2], 'Subject', 1);
  h =  hash [];
  parse_sa11_Subject(h, aux1);
  data{'Subject'} = h;

}

function build_sec12_ProxyTransitedStatement(data) {
  attr = [];
  body = [];

  push body, build_sa11_Subject(data{'Subject'});

  return TAG('sec12:ProxyTransitedStatement', attr, body);
}




function parse_sec12_ResourceAccessStatement(data, x) {

  tag = find_xml_local(x[2], 'Subject', 1);
  h =  hash [];
  parse_sa11_Subject(h, aux1);
  data{'Subject'} = h;
  tag = find_xml_local(x[2], 'ResourceID', 1);
  h =  hash [];
  parse_di12_ResourceID(h, aux1);
  data{'ResourceID'} = h;
  tag = find_xml_local(x[2], 'EncryptedResourceID', 1);
  h =  hash [];
  parse_di12_EncryptedResourceID(h, aux1);
  data{'EncryptedResourceID'} = h;
  tag = find_xml_local(x[2], 'ProxySubject', 1);
  h =  hash [];
  parse_sec12_ProxySubject(h, aux1);
  data{'ProxySubject'} = h;
  tag = find_xml_local(x[2], 'SessionContext', 1);
  h =  hash [];
  parse_sec12_SessionContext(h, aux1);
  data{'SessionContext'} = h;

}

function build_sec12_ResourceAccessStatement(data) {
  attr = [];
  body = [];

  push body, build_sa11_Subject(data{'Subject'});
  push body, build_di12_ResourceID(data{'ResourceID'});
  push body, build_di12_EncryptedResourceID(data{'EncryptedResourceID'});
  push body, build_sec12_ProxySubject(data{'ProxySubject'});
  push body, build_sec12_SessionContext(data{'SessionContext'});

  return TAG('sec12:ResourceAccessStatement', attr, body);
}




function parse_sec12_SessionContext(data, x) {
  POPATTR(x[1], 'AssertionIssueInstant', data.AssertionIssueInstant);
  POPATTR(x[1], 'AuthenticationInstant', data.AuthenticationInstant);
  POPATTR(x[1], 'SessionIndex', data.SessionIndex);

  tag = find_xml_local(x[2], 'SessionSubject', 1);
  h =  hash [];
  parse_sec12_SessionSubject(h, aux1);
  data{'SessionSubject'} = h;
  POPTAG_RAW(x[2],  'ProviderID', data.ProviderID);
  tag = find_xml_local(x[2], 'RequestAuthnContext', 1);
  h =  hash [];
  parse_ff12_RequestAuthnContext(h, aux1);
  data{'RequestAuthnContext'} = h;

}

function build_sec12_SessionContext(data) {
  attr = [];
  body = [];
  PUSHATTR(attr, 'AssertionIssueInstant', data.AssertionIssueInstant);
  PUSHATTR(attr, 'AuthenticationInstant', data.AuthenticationInstant);
  PUSHATTR(attr, 'SessionIndex', data.SessionIndex);

  push body, build_sec12_SessionSubject(data{'SessionSubject'});
  PUSHTAG_RAW(body, 'ProviderID', data.ProviderID);
  push body, build_ff12_RequestAuthnContext(data{'RequestAuthnContext'});

  return TAG('sec12:SessionContext', attr, body);
}




function parse_sec12_SessionContextStatement(data, x) {

  tag = find_xml_local(x[2], 'Subject', 1);
  h =  hash [];
  parse_sa11_Subject(h, aux1);
  data{'Subject'} = h;
  tag = find_xml_local(x[2], 'ProxySubject', 1);
  h =  hash [];
  parse_sec12_ProxySubject(h, aux1);
  data{'ProxySubject'} = h;
  tag = find_xml_local(x[2], 'SessionContext', 1);
  h =  hash [];
  parse_sec12_SessionContext(h, aux1);
  data{'SessionContext'} = h;

}

function build_sec12_SessionContextStatement(data) {
  attr = [];
  body = [];

  push body, build_sa11_Subject(data{'Subject'});
  push body, build_sec12_ProxySubject(data{'ProxySubject'});
  push body, build_sec12_SessionContext(data{'SessionContext'});

  return TAG('sec12:SessionContextStatement', attr, body);
}




function parse_sec12_SessionSubject(data, x) {

  tag = find_xml_local(x[2], 'NameIdentifier', 1);
  h =  hash [];
  parse_sa11_NameIdentifier(h, aux1);
  data{'NameIdentifier'} = h;
  tag = find_xml_local(x[2], 'SubjectConfirmation', 1);
  h =  hash [];
  parse_sa11_SubjectConfirmation(h, aux1);
  data{'SubjectConfirmation'} = h;
  tag = find_xml_local(x[2], 'IDPProvidedNameIdentifier', 1);
  h =  hash [];
  parse_ff12_IDPProvidedNameIdentifier(h, aux1);
  data{'IDPProvidedNameIdentifier'} = h;

}

function build_sec12_SessionSubject(data) {
  attr = [];
  body = [];

  push body, build_sa11_NameIdentifier(data{'NameIdentifier'});
  push body, build_sa11_SubjectConfirmation(data{'SubjectConfirmation'});
  push body, build_ff12_IDPProvidedNameIdentifier(data{'IDPProvidedNameIdentifier'});

  return TAG('sec12:SessionSubject', attr, body);
}




function parse_sec12_ValidityRestrictionCondition(data, x) {

  POPTAG_RAW(x[2],  'NumberOfUses', data.NumberOfUses);

}

function build_sec12_ValidityRestrictionCondition(data) {
  attr = [];
  body = [];

  PUSHTAG_RAW(body, 'NumberOfUses', data.NumberOfUses);

  return TAG('sec12:ValidityRestrictionCondition', attr, body);
}


/* EOF -- c/zx-sec12.ds */
